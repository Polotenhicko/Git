// Drag’n’Drop – отличный способ улучшить интерфейс.
// Захват элемента мышкой и его перенос визуально упростят что угодно

// В современном стандарте HTML5 есть раздел о Drag and Drop – и там есть специальные события именно для Drag’n’Drop переноса,
//  такие как dragstart, dragend и так далее.

// Например, можно перетащить файл в браузер, так что JS получит доступ к его содержимому.

// Но у них есть и ограничения. Например, нельзя организовать перенос «только по горизонтали» или «только по вертикали».
// Также нельзя ограничить перенос внутри заданной зоны. Есть и другие интерфейсные задачи,
// которые такими встроенными событиями не реализуемы.Кроме того, мобильные устройства плохо их поддерживают.

// Алгоритм Drag’n’Drop
// Базовый алгоритм Drag’n’Drop выглядит так:

// При mousedown – готовим элемент к перемещению, если необходимо (например, создаём его копию).
// Затем при mousemove передвигаем элемент на новые координаты путём смены left/top и position:absolute.
// При mouseup – остановить перенос элемента и произвести все действия, связанные с окончанием Drag’n’Drop.

ball.onmousedown = function (e) {
  // подготовить к перемещению
};
