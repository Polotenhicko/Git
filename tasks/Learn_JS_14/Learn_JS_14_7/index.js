// Общая проблема строк, дат, чисел в JavaScript – они «не в курсе» языка и особенностей стран, где находится посетитель.

// Строки
// При сравнении сравниваются коды символов, а это неправильно,
// к примеру, в русском языке оказывается, что "ё" > "я" и "а" > "Я", хотя всем известно,
// что я – последняя буква алфавита и это она должна быть больше любой другой.
// Даты
// В разных странах принята разная запись дат. Где-то пишут 31.12.2014 (Россия), а где-то 12/31/2014 (США), где-то иначе.
// Числа
// В одних странах выводятся цифрами, в других – иероглифами, длинные числа разделяются где-то пробелом, где-то запятой.
// Все современные браузеры, кроме IE10 (но есть библиотеки и для него)
// поддерживают стандарт ECMA 402, предназначенный решить эти проблемы навсегда.

// Intl.Collator умеет правильно сравнивать и сортировать строки
// Intl.DateTimeFormat умеет формировать дату и время в соотв с языком
// Intl.NumberFormat умеет форматировать числа в соотв с языком

// Локаль - первый и самый важный аргумент всех методов, связанный с интернационализацией

// локаль описывается строкой из трёх компонентов, которые разделяются дефисом
// 1. Код языка
// 2. Код способа записи
// 3. Код страны

// На практике не всегда указаны три, обычно меньше:

// ru – русский язык, без уточнений.
// en-GB – английский язык, используемый в Англии (GB).
// en-US – английский язык, используемый в США (US).
// zh-Hans-CN – китайский язык (zh), записываемый упрощённой иероглифической письменностью (Hans), используемый в Китае.

// также через суффикс -u-* можно указывать расширения локалей, напрмиер
// "th-TH-u-nu-thai" - тайский язык (th), используемый в Таиланде (TH), с записью чисел тайскими буквами

// Все методы принимают локаль в виде строки или массива, содержащего несколько локалей в порядке предпочтения.

// Если локаль не указана или undefined – берётся локаль по умолчанию, установленная в окружении (браузере).

// localeMatcher - вспомогательная настройка, которую можно указать, она определяет способ подбора локали, есои желаемая недоступна

// 2 значения:
// "lookup" простейший порядок поиска путём обрезания суффикса
// zh-Hans-CN -> zh-Hans -> zh -> локаль по умолчанию

// "best fit" использует встроенные алгоритмы и предпочтения браузера(или другого окружения) для выобра локали
// стоит по умолчанию

// Если локалей несколько, например["zh-Hans-CN", "ru-RU"]
// то localeMatcher пытается подобрать наиболее подходящую локаль для первой из списка(китайская),
// если не получается – переходит ко второй(русской) и так далее.Если ни одной не нашёл,
// например на компьютере не совсем поддерживается ни китайский ни русский, то используется локаль по умолчанию.

// Как правило, "best fit" является здесь наилучшим выбором.

// строки

// создание
// let collator = new Intl.Collator([locales, [options]])
// locales - локаль или массив в порядке предпочтения
// options - объект с доп настройками

//
