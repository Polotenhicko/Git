// Длинные опросы – это самый простой способ поддерживать постоянное соединение с сервером,
// не используя при этом никаких специфических протоколов(типа WebSocket или Server Sent Events).

// Самый простой способ получать новую информацию от сервера – периодический опрос
// То есть, регулярные запросы на сервер вида: «Привет, я здесь, у вас есть какая-нибудь информация для меня?».
// Например, раз в 10 секунд.

// В ответ сервер, во-первых, помечает у себя, что клиент онлайн, а во-вторых посылает весь пакет сообщений, накопившихся к данному моменту.

// Это работает, но есть и недостатки:

// Сообщения передаются с задержкой до 10 секунд (между запросами).
// Даже если сообщений нет, сервер «атакуется» запросами каждые 10 секунд, даже если пользователь переключился куда-нибудь или спит.
// С точки зрения производительности, это довольно большая нагрузка.

// «Длинные опросы» – гораздо лучший способ взаимодействия с сервером.

// Как это происходит:

// 1. Запрос отправляется на сервер.
// 2. Сервер не закрывает соединение, пока у него не возникнет сообщение для отсылки.
// 3. Когда появляется сообщение – сервер отвечает на запрос, посылая его.
// 4. Браузер немедленно делает новый запрос.

// Если соединение будет потеряно, скажем, из-за сетевой ошибки, браузер немедленно посылает новый запрос.

// Примерный код клиентской функции subscribe, которая реализует длинные опросы:

async function subscribe() {
  const response = await fetch('/subscribe');
  if (response.status == 502) {
    // 502 - таймаут соединения
    // соединение ждало очень долго и сервер закрыл связь
    await subscribe();
  } else if (response.status != 200) {
    // Какая-то ошибка
    console.log(response.statusText);
    // пытаемся подключиться снова через секунду
    await new Promise((res) => setTimeout(res, 1e3));
    await subscribe();
  } else {
    // сообщение получено
    const message = await response.text();
    console.log(message);
    // запускаем снова subscribe() для след сообщения
  }
}

// Архитектура сервера должна быть способна работать со многими ожидающими подключениями.

// Если сообщения приходят очень часто, то схема приёма-отправки сообщений, приведённая выше, становится похожей на «пилу».
// Каждое сообщение – это отдельный запрос, с заголовками, авторизацией и так далее.
